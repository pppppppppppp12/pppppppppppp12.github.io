<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[image-demo]]></title>
    <url>%2F2019%2F02%2F14%2Fimage-demo%2F</url>
    <content type="text"><![CDATA[image start image end]]></content>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[first-demo]]></title>
    <url>%2F2019%2F02%2F14%2Ffirst-demo%2F</url>
    <content type="text"><![CDATA[欢迎使用马克飞象马克飞象是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述： 功能丰富 ：支持高亮代码块、LaTeX 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手； 得心应手 ：简洁高效的编辑器，提供[桌面客户端][1]以及[离线Chrome App][2]，支持移动端 Web； 深度整合 ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。 Markdown简介 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— 维基百科 正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为粗体或者斜体，创建一个链接或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按Ctrl + /查看帮助。 代码块12345678910@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' 表格 Item Value Qty Computer 1600 USD 5 Phone 12 USD 12 Pipe 1 USD 234 复选框使用 - [ ] 和 - [x] 语法可以创建复选框，实现 todo-list 等功能。例如： 已完成事项 待办事项1 待办事项2 注意：目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在马克飞象中修改 Markdown 原文才可生效。下个版本将会全面支持。 印象笔记相关笔记本和标签马克飞象增加了@(笔记本)[标签A|标签B]语法, 以选择笔记本和添加标签。 绑定账号后， 输入(自动会出现笔记本列表，请从中选择。 笔记标题马克飞象会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 欢迎使用马克飞象。 快捷编辑保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到马克飞象中打开并编辑该笔记。 注意：目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。 数据同步马克飞象通过将Markdown原文以隐藏内容保存在笔记中的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。 隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。 离线存储马克飞象使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过文档管理打开。 注意：虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，请务必经常及时同步到印象笔记。 编辑器相关设置右侧系统菜单（快捷键Ctrl + M）的设置中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。 快捷键帮助 Ctrl + / 同步文档 Ctrl + S 创建文档 Ctrl + Alt + N 最大化编辑器 Ctrl + Enter 预览文档 Ctrl + Alt + Enter 文档管理 `Ctrl + O 系统菜单 Ctrl + M 加粗 Ctrl + B 插入图片 Ctrl + G 插入链接 Ctrl + L 提升标题 Ctrl + H 关于收费马克飞象为新用户提供 10 天的试用期，试用期过后需要续费才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。 反馈与建议 微博：@马克飞象，@GGock 邮箱：&#104;&#117;&#115;&#x74;&#x67;&#111;&#99;&#x6b;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109; 感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F14%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浏览器缓存]]></title>
    <url>%2F2019%2F02%2F13%2F%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%2F</url>
    <content type="text"><![CDATA[强缓存（本地缓存）1、特点 不发送请求到服务器 返回 200 from cache from memory cache 内存中读取 关闭页面随内存释放 js、font、img from disk cache 硬盘中读取 不会随页面关闭而释放 css（加载一次 disk -&gt; memory） 2、header字段 Cache-control : max-age=number（优先）http1.1 no-cache 不是用本地缓存 no-store 禁止缓存 public 可被所有用户缓存：终端用户的浏览器、CDN等中间代理服务器 private 终端用户的浏览器 Expires : GMT http1.0 GMT &gt; 发送请求的时间 3、 应用 资源库 协商缓存（由服务器决定）1、特点 返回 304，not modified 通过服务器告知缓存可用 更新header信息，不更新返回数据 header报文大小 2、header字段 Etag/If-None-Match：string（优先） http1.1 资源唯一标识符，资源变化会更新 优点：更准确的控制缓存 精确到秒以下的粒度 内容不变，修改时间变化的情况下使用缓存 Last-modified/If-Modified-Since: GMT GMT 最后修改时间 == 资源在服务器最后修改时间 == 304 not modified，不返回资源内容，response header更新 != 200，重新加载资源，header Last-modified更新 3、应用 缓存优化1、三级缓存原理 内存 ↓ （强缓存） 硬盘 ↓ （强缓存） 网络请求 ↓ 200 请求 304 （协议缓存，只更新header） 缓存到硬盘和内存 2、缓存优化思路 200 -&gt; 304 -&gt; 本地缓存 更新url版本号，使浏览器重新请求资源 文件级别的精确缓存控制 文件内容变化才变更url 将url改成带 文件摘要信息 静态资源CDN节点部署 性能优化：静态资源和动态网页分集群部署，静态资源部署到CDN节点 覆盖式发布：部署页面和部署资源的先后顺序：资源 -&gt; 页面 非覆盖式发布 用文件摘要信息 对资源文件进行重命名，不覆盖原有的资源文件 全量部署静态资源，再灰度部署页面 3、静态资源缓存控制方案 配置超长时间的本地缓存：节省带宽 提高性能采用内容摘要作为缓存更新依据：精确的缓存控制 静态资源CDN部署： 优化网络请求 更新资源发布路径实现非覆盖式发布： 平滑升级 ps：from 大公司的缓存优化 4、实现工具rails assets pipelineF.I.S F.I.S发布项目]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
</search>
